{"version":3,"sources":["logic/operate.js","logic/replaceSqrt.js","logic/calculate.js","logic/isNumber.js","component/Display.js","component/Button.js","component/ButtonPanel.js","component/App.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","operate","big_js__WEBPACK_IMPORTED_MODULE_0__","big_js__WEBPACK_IMPORTED_MODULE_0___default","n","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","concat","replaceSqrt","str","res","slice","match","forEach","replace","replaceExponent","replaceDivide","calculatorMap","AC","backspace","","calculate","obj","buttonName","Object","_Users_andre_validero_calculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","total","next","substring","length","operator","console","log","calc","isNumber","result","includes","parseFloat","expr","eval","substr","trim","e","item","test","Display","react_default","a","createElement","className","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","onClick","children","ButtonPanel","Button_Button","App","state","expression","setState","document","addEventListener","Display_Display","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.d8041c3a.chunk.js","sourcesContent":["import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"÷\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"÷\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","export function replaceSqrt(str) {\n    let res = str.slice();\n    let matches = str.match(/√[0-9]*/g) || [];\n    matches.forEach(match => {\n        res = res.replace(match, (match.replace('√', 'Math.sqrt(') + ')'));\n    });\n    return res;\n}\n\nexport function replaceExponent(str) {\n    let res = str.slice();\n    let matches = str.match(/pow\\([0-9]|\\|\\+*,[0-9]*\\)/g) || [];\n\n    matches.forEach(match => {\n        res = res.replace(match, 'Math.' + match);\n    });\n    return res;\n}\n\n\nexport function replaceDivide(str) {\n    let res = str.slice();\n    let matches = str.match(/%/g) || [];\n\n    matches.forEach(match => {\n        res = res.replace(match, '/');\n    });\n    return res;\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\nimport {replaceDivide, replaceExponent, replaceSqrt} from \"./replaceSqrt\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\n\nconst calculatorMap = {\n    'AC': 'AC',\n    'backspace': 'backspace',\n    '': '',\n};\n\nexport default function calculate(obj, buttonName) {\n\n    switch (buttonName) {\n\n        case 'oil':\n            return obj;\n        case 'z':\n            return obj;\n        case 'AC':\n            return {\n                ...obj,\n                total: null,\n                next: '',\n                operation: null,\n            };\n        case 'backspace':\n            return {\n                ...obj,\n                total: null,\n                next: obj.next.substring(0, obj.next.length - 1),\n                operation: null,\n            };\n        case 'pow':\n            return {\n                ...obj,\n                total: null,\n                next: obj.next + 'pow(',\n                operation: null,\n                operator: 'pow'\n            };\n        case '=':\n            console.log(obj.next);\n            return {\n                ...obj,\n                next: calc(obj.next).toString(),\n            };\n        case '':\n            console.log(obj.next);\n            return {\n                ...obj,\n                next: calc(obj.next).toString(),\n            };\n        default:\n            if (obj.next.length > 14) {\n                alert('max expression length us 15');\n                return obj;\n            }\n            return {\n                ...obj,\n                next: obj.next + buttonName,\n            }\n\n    }\n\n    if (isNumber(buttonName)) {\n        if (buttonName === \"0\" && obj.next === \"0\") {\n            return {};\n        }\n        // If there is an operation, update next\n        if (obj.operation) {\n            if (obj.next) {\n                return {next: obj.next + buttonName};\n            }\n            return {next: buttonName};\n        }\n        // If there is no operation, update next and clear the value\n        if (obj.next) {\n            const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n            return {\n                next,\n                total: null,\n            };\n        }\n        return {\n            next: buttonName,\n            total: null,\n        };\n    }\n\n    if (buttonName === \"%\") {\n        if (obj.operation && obj.next) {\n            const result = operate(obj.total, obj.next, obj.operation);\n            return {\n                total: Big(result)\n                    .div(Big(\"100\"))\n                    .toString(),\n                next: null,\n                operation: null,\n            };\n        }\n        if (obj.next) {\n            return {\n                next: Big(obj.next)\n                    .div(Big(\"100\"))\n                    .toString(),\n            };\n\n        }\n        return {};\n    }\n\n    if (buttonName === \".\") {\n        if (obj.next) {\n            // ignore a . if the next number already has one\n            if (obj.next.includes(\".\")) {\n                return {};\n            }\n            return {next: obj.next + \".\"};\n        }\n        return {next: \"0.\"};\n    }\n\n    if (buttonName === \"=\") {\n        if (obj.next && obj.operation) {\n            return {\n                total: operate(obj.total, obj.next, obj.operation),\n                next: null,\n                operation: null,\n            };\n        } else {\n            // '=' with no operation, nothing to do\n            return {};\n        }\n    }\n\n    if (buttonName === \"+/-\") {\n        if (obj.next) {\n            return {next: (-1 * parseFloat(obj.next)).toString()};\n        }\n        if (obj.total) {\n            return {total: (-1 * parseFloat(obj.total)).toString()};\n        }\n        return {};\n    }\n\n    // Button must be an operation\n\n    // When the user presses an operation button without having entered\n    // a number first, do nothing.\n    // if (!obj.next && !obj.total) {\n    //   return {};\n    // }\n\n    // User pressed an operation button and there is an existing operation\n    if (obj.operation) {\n        return {\n            total: operate(obj.total, obj.next, obj.operation),\n            next: null,\n            operation: buttonName,\n        };\n    }\n\n    // no operation yet, but the user typed one\n\n    // The user hasn't typed a number yet, just save the operation\n    if (!obj.next) {\n        return {operation: buttonName};\n    }\n\n    // save the operation and shift 'next' into 'total'\n    // return {\n    //     total: obj.next,\n    //     next: null,\n    //     operation: buttonName,\n    // };\n    // save the operation and shift 'next' into 'total'\n    return {\n        total: obj.next,\n        next: obj.next + buttonName,\n        operation: buttonName,\n    };\n}\n\nconst calc = (expr) => {\n    console.log(expr);\n    try {\n        return eval(replaceDivide(replaceExponent(replaceSqrt(expr)))).toString().substr(0, 15).trim();\n    } catch (e) {\n        alert('invalid expression');\n        console.log(e);\n        return expr;\n    }\n};\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.children}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ButtonPanel.css\";\n\nexport default class ButtonPanel extends React.Component {\n    static propTypes = {\n        clickHandler: PropTypes.func,\n    };\n\n    handleClick = buttonName => {\n        this.props.clickHandler(buttonName);\n    };\n\n    render() {\n        return (\n            <div className=\"component-button-panel\">\n\n                <div>\n                    <Button name=\"AC\" clickHandler={this.handleClick}>AC</Button>\n                    <Button name=\"(\" clickHandler={this.handleClick}>(</Button>\n                    <Button name=\")\" clickHandler={this.handleClick}>)</Button>\n                    <Button name=\"oil\" clickHandler={this.handleClick}>oil</Button>\n\n                </div>\n                <div>\n                    <Button name=\"√\" clickHandler={this.handleClick}>√<sup>2</sup></Button>\n                    <Button name=\"pow\" clickHandler={this.handleClick}>pow()</Button>\n                    <Button name=\"backspace\" clickHandler={this.handleClick}>←</Button>\n                    <Button name=\"/\" clickHandler={this.handleClick} orange>÷</Button>\n\n                </div>\n                <div>\n                    <Button name=\"7\" clickHandler={this.handleClick}>7</Button>\n                    <Button name=\"8\" clickHandler={this.handleClick}>8</Button>\n                    <Button name=\"9\" clickHandler={this.handleClick}>9</Button>\n                    <Button name=\"*\" clickHandler={this.handleClick} orange>*</Button>\n                </div>\n                <div>\n                    <Button name=\"4\" clickHandler={this.handleClick}>4</Button>\n                    <Button name=\"5\" clickHandler={this.handleClick}>5</Button>\n                    <Button name=\"6\" clickHandler={this.handleClick}>6</Button>\n                    <Button name=\"-\" clickHandler={this.handleClick} orange>-</Button>\n                </div>\n                <div>\n                    <Button name=\"1\" clickHandler={this.handleClick}>1</Button>\n                    <Button name=\"2\" clickHandler={this.handleClick}>2</Button>\n                    <Button name=\"3\" clickHandler={this.handleClick}>3</Button>\n                    <Button name=\"+\" clickHandler={this.handleClick} orange>+</Button>\n                </div>\n                <div>\n                    <Button name=\"0\" clickHandler={this.handleClick}>0</Button>\n                    <Button name=\".\" clickHandler={this.handleClick}>.</Button>\n                    <Button name=\",\" clickHandler={this.handleClick}>,</Button>\n\n                    <Button name=\"=\" clickHandler={this.handleClick} orange>=</Button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n\n    componentDidMount() {\n        document.addEventListener('keyup', (e) => {\n            console.log(e);\n        });\n    }\n\n    state = {\n        total: null,\n        next: '',\n        operation: null,\n        expression: '',\n        operator: ''\n    };\n\n    handleClick = buttonName => {\n        let res = calculate(this.state, buttonName);\n        console.log(res);\n        this.setState(res);\n    };\n\n    render() {\n        return (\n            <div className=\"component-app\">\n                <Display value={this.state.next || this.state.total || \"0\"}/>\n                <ButtonPanel clickHandler={this.handleClick}/>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}